name: Deploy CMS to DigitalOcean

on:
  push:
    branches: [ main, production ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql
    
    - name: Validate PHP syntax
      run: find . -name "*.php" -exec php -l {} \;
    
    - name: Check file permissions
      run: |
        test -r data.json
        test -r mensajes.json
        test -d uploads

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DigitalOcean Container Registry
      uses: docker/login-action@v2
      with:
        registry: registry.digitalocean.com
        username: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/cms-visual:latest
          registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/cms-visual:${{ github.sha }}
    
    - name: Deploy to DigitalOcean Droplet
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          # Pull latest image
          docker pull registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/cms-visual:latest
          
          # Stop existing container
          docker stop cms-visual || true
          docker rm cms-visual || true
          
          # Run new container
          docker run -d \
            --name cms-visual \
            -p 80:80 \
            -p 443:443 \
            -v /var/www/uploads:/var/www/html/uploads \
            -v /var/www/data.json:/var/www/html/data.json \
            -v /var/www/mensajes.json:/var/www/html/mensajes.json \
            --restart unless-stopped \
            registry.digitalocean.com/${{ secrets.DO_REGISTRY_NAME }}/cms-visual:latest
          
          # Clean up old images
          docker image prune -f
    
    - name: Verify deployment
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.DO_HOST }}
        username: ${{ secrets.DO_USERNAME }}
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          # Wait for container to start
          sleep 30
          
          # Check if container is running
          if docker ps | grep -q cms-visual; then
            echo "‚úÖ Deployment successful!"
            # Test HTTP response
            curl -f http://localhost/ || echo "‚ö†Ô∏è Warning: HTTP check failed"
          else
            echo "‚ùå Deployment failed!"
            exit 1
          fi

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify success
      if: ${{ needs.deploy.result == 'success' }}
      run: echo "üöÄ Deployment completed successfully!"
      
    - name: Notify failure
      if: ${{ needs.deploy.result == 'failure' }}
      run: echo "‚ùå Deployment failed. Check logs for details."